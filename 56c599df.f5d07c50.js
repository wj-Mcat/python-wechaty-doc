(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return l}));var o=a(3),n=a(7),c=(a(0),a(177)),r={title:"Room"},b={unversionedId:"api/room",id:"api/room",isDocsHomePage:!1,title:"Room",description:"All wechat rooms(groups) will be encapsulated as a Room.",source:"@site/docs/api/room.md",slug:"/api/room",permalink:"/python-wechaty-doc/docs/api/room",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/api/room.md",version:"current",lastUpdatedBy:"wjmcat",lastUpdatedAt:1607837451,sidebar:"docs",previous:{title:"Contact",permalink:"/python-wechaty-doc/docs/api/contact"},next:{title:"RoomInvitation",permalink:"/python-wechaty-doc/docs/api/room-invitation"}},i=[{value:"Classes",id:"classes",children:[]},{value:"Typedefs",id:"typedefs",children:[]},{value:"Room",id:"room",children:[{value:"room.sync() \u21d2 <code>Promise &lt;void&gt;</code>",id:"roomsync-\u21d2-promise-void",children:[]},{value:"room.say(textOrContactOrFileOrUrlLinkOrMiniProgram, ...mentionList) \u21d2 <code>Promise &lt;void&gt;</code>",id:"roomsaytextorcontactorfileorurllinkorminiprogram-mentionlist-\u21d2-promise-void",children:[]},{value:"room.on(event, listener) \u21d2 <code>this</code>",id:"roomonevent-listener-\u21d2-this",children:[]},{value:"room.add(contact) \u21d2 <code>Promise &lt;void&gt;</code>",id:"roomaddcontact-\u21d2-promise-void",children:[]},{value:"room.del(contact) \u21d2 <code>Promise &lt;void&gt;</code>",id:"roomdelcontact-\u21d2-promise-void",children:[]},{value:"room.quit() \u21d2 <code>Promise &lt;void&gt;</code>",id:"roomquit-\u21d2-promise-void",children:[]},{value:"room.topic([newTopic]) \u21d2 <code>Promise &lt;void | string&gt;</code>",id:"roomtopicnewtopic-\u21d2-promise-void--string",children:[]},{value:"room.announce([text]) \u21d2 <code>Promise &lt;void | string&gt;</code>",id:"roomannouncetext-\u21d2-promise-void--string",children:[]},{value:"room.qrcode() \u21d2 <code>Promise &lt;string&gt;</code>",id:"roomqrcode-\u21d2-promise-string",children:[]},{value:"room.alias(contact) \u21d2 <code>Promise &lt;string | null&gt;</code>",id:"roomaliascontact-\u21d2-promise-string--null",children:[]},{value:"room.has(contact) \u21d2 <code>Promise &lt;boolean&gt;</code>",id:"roomhascontact-\u21d2-promise-boolean",children:[]},{value:"room.memberAll([query]) \u21d2 <code>Promise &lt;Contact []&gt;</code>",id:"roommemberallquery-\u21d2-promise-contact-",children:[]},{value:"room.member(queryArg) \u21d2 <code>Promise &lt;Contact | null&gt;</code>",id:"roommemberqueryarg-\u21d2-promise-contact--null",children:[]},{value:"room.owner() \u21d2 <code>Contact</code> | <code>null</code>",id:"roomowner-\u21d2-contact--null",children:[]},{value:"room.avatar() \u21d2 <code>Promise &lt;FileBox&gt;</code>",id:"roomavatar-\u21d2-promise-filebox",children:[]},{value:"Room.create(contactList, [topic]) \u21d2 Promise <Room>",id:"roomcreatecontactlist-topic-\u21d2-promise-room",children:[]},{value:"Room.findAll([query]) \u21d2 <code>Promise &lt;Room []&gt;</code>",id:"roomfindallquery-\u21d2-promise-room-",children:[]},{value:"Room.find(query) \u21d2 <code>Promise &lt;Room&gt;</code>",id:"roomfindquery-\u21d2-promise-room",children:[]}]},{value:"RoomQueryFilter",id:"roomqueryfilter",children:[]},{value:"RoomEventName",id:"roomeventname",children:[]},{value:"RoomEventFunction",id:"roomeventfunction",children:[]},{value:"RoomMemberQueryFilter",id:"roommemberqueryfilter",children:[]}],m={rightToc:i};function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"All wechat rooms(groups) will be encapsulated as a Room."),Object(c.b)("h2",{id:"classes"},"Classes"),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),"Room")),Object(c.b)("p",null,"All wechat rooms","(","groups",")"," will be encapsulated as a Room."),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/blob/1523c5e02be46ebe2cc172a744b2fbe53351540e/examples/room-bot.ts"}),"Examples/Room-Bot")),Object(c.b)("h2",{id:"typedefs"},"Typedefs"),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#RoomQueryFilter"}),"RoomQueryFilter")),Object(c.b)("p",null,"The filter to find the room: {topic: string ","|"," RegExp} ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#RoomEventName"}),"RoomEventName")),Object(c.b)("p",null,"Room Class Event Type ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#RoomEventFunction"}),"RoomEventFunction")),Object(c.b)("p",null,"Room Class Event Function ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#RoomMemberQueryFilter"}),"RoomMemberQueryFilter")),Object(c.b)("p",null,"The way to search member by Room.member","(",")"),Object(c.b)("h2",{id:"room"},"Room"),Object(c.b)("p",null,"All wechat rooms","(","groups",")"," will be encapsulated as a Room."),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/blob/1523c5e02be46ebe2cc172a744b2fbe53351540e/examples/room-bot.ts"}),"Examples/Room-Bot")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": global class ",Object(c.b)("strong",{parentName:"p"},"Properties")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"id"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Get Room id. This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room"}),"Room"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("em",{parentName:"li"},"instance"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+sync"}),".sync","(",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+say"}),".say","(","textOrContactOrFileOrUrl, ...mentionList",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+on"}),".on","(","event, listener",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Room")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+add"}),".add","(","contact",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+del"}),".del","(","contact",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+quit"}),".quit","(",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+topic"}),".topic","(","[","newTopic","]",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void | string>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+announce"}),".announce","(","[","text","]",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <void | string>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+qrcode"}),".qrcode","(",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <string>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+alias"}),".alias","(","contact",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <null | string>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+has"}),".has","(","contact",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <boolean>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+memberAll"}),".memberAll","(","[","query","]",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <Contact []>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+member"}),".member","(","queryArg",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <Contact | null>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room+owner"}),".owner","(",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Contact")," ","|"," ",Object(c.b)("inlineCode",{parentName:"li"},"null")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#room-owner-contact-or-null"}),".avatar","(",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <FileBox>")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("em",{parentName:"li"},"static"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room.create"}),".create","(","contactList, ","[","topic","]",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <Room>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room.findAll"}),".findAll","(","[","query","]",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <Room []>")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"/python-wechaty-doc/docs/api/room#Room.find"}),".find","(","query",")")," \u21d2 ",Object(c.b)("inlineCode",{parentName:"li"},"Promise <Room | null>"))))))),Object(c.b)("h3",{id:"roomsync-\u21d2-promise-void"},"room.sync","(",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void>")),Object(c.b)("p",null,"Force reload data for Room, Sync data from lowlevel API again."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Example")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"await room.sync()\n")),Object(c.b)("h3",{id:"roomsaytextorcontactorfileorurllinkorminiprogram-mentionlist-\u21d2-promise-void"},"room.say","(","textOrContactOrFileOrUrlLinkOrMiniProgram, ...mentionList",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void>")),Object(c.b)("p",null,"Send message inside Room, if set mentionList, wechaty will mention the contact list as well."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"textOrContactOrFileOrUrlLinkOrMiniProgram"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"Contact")," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"FileBox")," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"UrlLink")," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"MiniProgram")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Send ",Object(c.b)("inlineCode",{parentName:"td"},"text"),", ",Object(c.b)("inlineCode",{parentName:"td"},"media file")," or ",Object(c.b)("inlineCode",{parentName:"td"},"link")," inside Room.   You can use ",Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"https://www.npmjs.com/package/file-box"}),"FileBox")," to send file")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"...mentionList"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Contact []")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Send content inside Room, and mention @contact list.")))),Object(c.b)("h4",{id:"exampl"},"Exampl"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"import { FileBox }  from 'file-box'\nimport {\n  Wechaty,\n  UrlLink,\n  MiniProgram,\n}  from 'wechaty'\n\nconst bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'wechaty'})\n\n// 1. Send text inside Room\n\nawait room.say('Hello world!')\n\n// 2. Send media file inside Room\n\nimport { FileBox }  from 'file-box'\nconst fileBox1 = FileBox.fromUrl('https://wechaty.github.io/wechaty/images/bot-qr-code.png')\nconst fileBox2 = FileBox.fromLocal('/tmp/text.txt')\nawait room.say(fileBox1)\nawait room.say(fileBox2)\n\n// 3. Send Contact Card in a room\n\nconst contactCard = await bot.Contact.find({name: 'lijiarui'}) // change 'lijiarui' to any of the room member\nawait room.say(contactCard)\n\n// 4. Send text inside room and mention @mention contact\n\nconst members = await room.memberAll() // all members in this room\nconst someMembers = members.slice(0, 3);\nawait room.say('Hello world!', ...someMembers)\n\n// 5. send Link inside room\n\nconst linkPayload = new UrlLink({\n  description : 'WeChat Bot SDK for Individual Account, Powered by TypeScript, Docker, and Love',\n  thumbnailUrl: 'https://avatars0.githubusercontent.com/u/25162437?s=200&v=4',\n  title       : 'Welcome to Wechaty',\n  url         : 'https://github.com/wechaty/wechaty',\n})\nawait room.say(linkPayload)\n\n// 6. send MiniProgram (only supported by `wechaty-puppet-macpro`)\n\nconst miniProgram = new MiniProgram ({\n  appid              : 'gh_0aa444a25adc',\n  title              : '\u6211\u6b63\u5728\u4f7f\u7528Authing\u8ba4\u8bc1\u8eab\u4efd\uff0c\u4f60\u4e5f\u6765\u8bd5\u8bd5\u5427',\n  pagePath           : 'routes/explore.html',\n  description        : '\u8eab\u4efd\u7ba1\u5bb6',\n  thumbUrl           : '30590201000452305002010002041092541302033d0af802040b30feb602045df0c2c5042b777875706c6f61645f31373533353339353230344063686174726f6f6d3131355f313537363035393538390204010400030201000400',\n  thumbKey           : '42f8609e62817ae45cf7d8fefb532e83',\n});\nawait room.say(miniProgram);\n")),Object(c.b)("h3",{id:"roomonevent-listener-\u21d2-this"},"room.on","(","event, listener",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"this")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Returns"),": ",Object(c.b)("inlineCode",{parentName:"p"},"this")," - - Room for chain"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"event"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomEventName"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomEventName"))),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Emit WechatyEvent")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"listener"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomEventFunction"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomEventFunction"))),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Depends on the WechatyEvent")))),Object(c.b)("h4",{id:"example-eventjoin-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Event:join ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'topic of your room'}) // change `event-room` to any room topic in your wechat\nif (room) {\n  room.on('join', (room, inviteeList, inviter) => {\n    const nameList = inviteeList.map(c => c.name()).join(',')\n    console.log(`Room got new member ${nameList}, invited by ${inviter}`)\n  })\n}\n")),Object(c.b)("h4",{id:"example-eventleave-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Event:leave ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'topic of your room'}) // change `event-room` to any room topic in your wechat\nif (room) {\n  room.on('leave', (room, leaverList) => {\n    const nameList = leaverList.map(c => c.name()).join(',')\n    console.log(`Room lost member ${nameList}`)\n  })\n}\n")),Object(c.b)("h4",{id:"example-eventtopic-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Event:topic ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'topic of your room'}) // change `event-room` to any room topic in your wechat\nif (room) {\n  room.on('topic', (room, topic, oldTopic, changer) => {\n    console.log(`Room topic changed from ${oldTopic} to ${topic} by ${changer.name()}`)\n  })\n}\n")),Object(c.b)("h4",{id:"example-eventinvite-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Event:invite ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'topic of your room'}) // change `event-room` to any room topic in your wechat\nif (room) {\n  room.on('invite', roomInvitation => roomInvitation.accept())\n}\n")),Object(c.b)("h3",{id:"roomaddcontact-\u21d2-promise-void"},"room.add","(","contact",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void>")),Object(c.b)("p",null,"Add contact in a room"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table")),Object(c.b)("p",{parentName:"blockquote"},"see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/issues/1441"}),"Web version of WeChat closed group interface"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contact"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Contact"))))),Object(c.b)("h4",{id:"exampl-1"},"Exampl"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst contact = await bot.Contact.find({name: 'lijiarui'}) // change 'lijiarui' to any contact in your wechat\nconst room = await bot.Room.find({topic: 'wechat'})        // change 'wechat' to any room topic in your wechat\nif (room) {\n  try {\n     await room.add(contact)\n  } catch(e) {\n     console.error(e)\n  }\n}\n")),Object(c.b)("h3",{id:"roomdelcontact-\u21d2-promise-void"},"room.del","(","contact",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void>")),Object(c.b)("p",null,"Delete a contact from the room It works only when the bot is the owner of the room"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table")),Object(c.b)("p",{parentName:"blockquote"},"see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/issues/1441"}),"Web version of WeChat closed group interface"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contact"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Contact"))))),Object(c.b)("h4",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'wechat'})          // change 'wechat' to any room topic in your wechat\nconst contact = await bot.Contact.find({name: 'lijiarui'})   // change 'lijiarui' to any room member in the room you just set\nif (room) {\n  try {\n     await room.del(contact)\n  } catch(e) {\n     console.error(e)\n  }\n}\n")),Object(c.b)("h3",{id:"roomquit-\u21d2-promise-void"},"room.quit","(",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void>")),Object(c.b)("p",null,"Bot quit the room itself"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Example")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"await room.quit()\n")),Object(c.b)("h3",{id:"roomtopicnewtopic-\u21d2-promise-void--string"},"room.topic","(","[","newTopic","]",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void | string>")),Object(c.b)("p",null,"SET/GET topic from the room"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"[","newTopic","]"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"If set this para, it will change room topic.")))),Object(c.b)("h4",{id:"example-when-you-say-anything-in-a-room-it-will-get-room-topic-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","When you say anything in a room, it will get room topic. ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nbot\n.on('message', async m => {\n  const room = m.room()\n  if (room) {\n    const topic = await room.topic()\n    console.log(`room topic is : ${topic}`)\n  }\n})\n.start()\n")),Object(c.b)("h4",{id:"example-when-you-say-anything-in-a-room-it-will-change-room-topic-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","When you say anything in a room, it will change room topic. ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nbot\n.on('message', async m => {\n  const room = m.room()\n  if (room) {\n    const oldTopic = await room.topic()\n    await room.topic('change topic to wechaty!')\n    console.log(`room topic change from ${oldTopic} to ${room.topic()}`)\n  }\n})\n.start()\n")),Object(c.b)("h3",{id:"roomannouncetext-\u21d2-promise-void--string"},"room.announce","(","[","text","]",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <void | string>")),Object(c.b)("p",null,"SET/GET announce from the room"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: It only works when bot is the owner of the room."),Object(c.b)("p",{parentName:"blockquote"},"This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"[","text","]"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"If set this para, it will change room announce.")))),Object(c.b)("h4",{id:"example-when-you-say-anything-in-a-room-it-will-get-room-announce-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","When you say anything in a room, it will get room announce. ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'your room'})\nconst announce = await room.announce()\nconsole.log(`room announce is : ${announce}`)\n")),Object(c.b)("h4",{id:"example-when-you-say-anything-in-a-room-it-will-change-room-announce-"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","When you say anything in a room, it will change room announce. ",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'your room'})\nconst oldAnnounce = await room.announce()\nawait room.announce('change announce to wechaty!')\nconsole.log(`room announce change from ${oldAnnounce} to ${room.announce()}`)\n")),Object(c.b)("h3",{id:"roomqrcode-\u21d2-promise-string"},"room.qrcode","(",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <string>")),Object(c.b)("p",null,"Get QR Code of the Room from the room, which can be used as scan and join the room."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("h3",{id:"roomaliascontact-\u21d2-promise-string--null"},"room.alias","(","contact",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <string | null>")),Object(c.b)("p",null,"Return contact's roomAlias in the room"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Returns"),": ",Object(c.b)("inlineCode",{parentName:"p"},"Promise <string | null>")," - - If a contact has an alias in room, return string, otherwise return null"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contact"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Contact"))))),Object(c.b)("h4",{id:"exampl-2"},"Exampl"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nbot\n.on('message', async m => {\n  const room = m.room()\n  const contact = m.from()\n  if (room) {\n    const alias = await room.alias(contact)\n    console.log(`${contact.name()} alias is ${alias}`)\n  }\n})\n.start()\n")),Object(c.b)("h3",{id:"roomhascontact-\u21d2-promise-boolean"},"room.has","(","contact",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <boolean>")),Object(c.b)("p",null,"Check if the room has member ",Object(c.b)("inlineCode",{parentName:"p"},"contact"),", the return is a Promise and must be ",Object(c.b)("inlineCode",{parentName:"p"},"await"),"-ed"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Returns"),": ",Object(c.b)("inlineCode",{parentName:"p"},"Promise.")," - Return ",Object(c.b)("inlineCode",{parentName:"p"},"true")," if has contact, else return ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contact"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Contact"))))),Object(c.b)("h4",{id:"example-check-whether-lijiarui-is-in-the-room-wechaty"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Check whether 'lijiarui' is in the room 'wechaty'",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst contact = await bot.Contact.find({name: 'lijiarui'})   // change 'lijiarui' to any of contact in your wechat\nconst room = await bot.Room.find({topic: 'wechaty'})         // change 'wechaty' to any of the room in your wechat\nif (contact && room) {\n  if (await room.has(contact)) {\n    console.log(`${contact.name()} is in the room wechaty!`)\n  } else {\n    console.log(`${contact.name()} is not in the room wechaty!`)\n  }\n}\n")),Object(c.b)("h3",{id:"roommemberallquery-\u21d2-promise-contact-"},"room.memberAll","(","[","query","]",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <Contact []>")),Object(c.b)("p",null,"Find all contacts in a room"),Object(c.b)("h4",{id:"definition"},"definition"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"name"),"                 the name-string set by user-self, should be called name, equal to ",Object(c.b)("inlineCode",{parentName:"li"},"Contact.name()")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"roomAlias"),"            the name-string set by user-self in the room, should be called roomAlias"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"contactAlias"),"         the name-string set by bot for others, should be called alias, equal to ",Object(c.b)("inlineCode",{parentName:"li"},"Contact.alias()"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"[","query","]"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomMemberQueryFilter"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomMemberQueryFilter"))," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Optional parameter, When use memberAll","(","name:string",")",", return all matched members, including name, roomAlias, contactAlias")))),Object(c.b)("h4",{id:"example-1"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const memberList: Conatct[] = await room.memberAll()\nconsole.log(`room all member list: `, memberList)\n\nconst memberContactList: Conatct[] = await room.memberAll(`abc`)\nconsole.log(`contact list with all name, room alias, alias are abc:`, memberContactList)\n")),Object(c.b)("h3",{id:"roommemberqueryarg-\u21d2-promise-contact--null"},"room.member","(","queryArg",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <Contact | null>")),Object(c.b)("p",null,"Find all contacts in a room, if get many, return the first one."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"queryArg"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomMemberQueryFilter"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomMemberQueryFilter"))," ","|"," ",Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"When use member","(","name:string",")",", return all matched members, including name, roomAlias, contactAlias")))),Object(c.b)("h4",{id:"example-find-member-by-name"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Find member by name",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'wechaty'})           // change 'wechaty' to any room name in your wechat\nif (room) {\n  const member = await room.member('lijiarui')             // change 'lijiarui' to any room member in your wechat\n  if (member) {\n    console.log(`wechaty room got the member: ${member.name()}`)\n  } else {\n    console.log(`cannot get member in wechaty room!`)\n  }\n}\n")),Object(c.b)("h4",{id:"example-find-member-by-memberqueryfilter"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Find member by MemberQueryFilter",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst room = await bot.Room.find({topic: 'wechaty'})          // change 'wechaty' to any room name in your wechat\nif (room) {\n  const member = await room.member({name: 'lijiarui'})        // change 'lijiarui' to any room member in your wechat\n  if (member) {\n    console.log(`wechaty room got the member: ${member.name()}`)\n  } else {\n    console.log(`cannot get member in wechaty room!`)\n  }\n}\n")),Object(c.b)("h3",{id:"roomowner-\u21d2-contact--null"},"room.owner","(",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Contact")," ","|"," ",Object(c.b)("inlineCode",{parentName:"h3"},"null")),Object(c.b)("p",null,"Get room's owner from the room."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Example")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const owner = room.owner()\n")),Object(c.b)("h3",{id:"roomavatar-\u21d2-promise-filebox"},"room.avatar","(",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <FileBox>")),Object(c.b)("p",null,"Get room's avatar"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Tips: This function is depending on the Puppet Implementation, see ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table"}),"puppet-compatible-table"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Example")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const owner = room.avatar()\n")),Object(c.b)("h3",{id:"roomcreatecontactlist-topic-\u21d2-promise-room"},"Room.create","(","contactList, ","[","topic","]",")"," \u21d2 ",Object(c.b)("a",Object(o.a)({parentName:"h3"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Promise <Room>"))),Object(c.b)("p",null,"Create a new room."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": static method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contactList"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"Array"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"[","topic","]"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string"))))),Object(c.b)("h4",{id:"example-creat-a-room-with-lijiarui-and-juxiaomi-the-room-topic-is-ding---created"},"Example ",Object(c.b)("em",{parentName:"h4"},"(","Creat a room with 'lijiarui' and 'juxiaomi', the room topic is 'ding - created'",")")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const helperContactA = await Contact.find({ name: 'lijiarui' })  // change 'lijiarui' to any contact in your wechat\nconst helperContactB = await Contact.find({ name: 'juxiaomi' })  // change 'juxiaomi' to any contact in your wechat\nconst contactList = [helperContactA, helperContactB]\nconsole.log('Bot', 'contactList: %s', contactList.join(','))\nconst room = await Room.create(contactList, 'ding')\nconsole.log('Bot', 'createDingRoom() new ding room created: %s', room)\nawait room.topic('ding - created')\nawait room.say('ding - created')\n")),Object(c.b)("h3",{id:"roomfindallquery-\u21d2-promise-room-"},"Room.findAll","(","[","query","]",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <Room []>")),Object(c.b)("p",null,"Find room by by filter: {topic: string ","|"," RegExp}, return all the matched room"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": static method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"[","query","]"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomQueryFilter"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomQueryFilter")))))),Object(c.b)("h4",{id:"exampl-3"},"Exampl"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in\nconst roomList = await bot.Room.findAll()                    // get the room list of the bot\nconst roomList = await bot.Room.findAll({topic: 'wechaty'})  // find all of the rooms with name 'wechaty'\n")),Object(c.b)("h3",{id:"roomfindquery-\u21d2-promise-room"},"Room.find","(","query",")"," \u21d2 ",Object(c.b)("inlineCode",{parentName:"h3"},"Promise <Room>")),Object(c.b)("p",null,"Try to find a room by filter: {topic: string ","|"," RegExp}. If get many, return the first one."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": static method of ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/python-wechaty-doc/docs/api/room#Room"}),Object(c.b)("inlineCode",{parentName:"a"},"Room"))," ",Object(c.b)("strong",{parentName:"p"},"Returns"),": ",Object(c.b)("inlineCode",{parentName:"p"},"Promise <Room>")," - If can find the room, return Room, or return null"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Param"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"query"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"/python-wechaty-doc/docs/api/room#RoomQueryFilter"}),Object(c.b)("inlineCode",{parentName:"a"},"RoomQueryFilter")))))),Object(c.b)("h4",{id:"exampl-4"},"Exampl"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const bot = new Wechaty()\nawait bot.start()\n// after logged in...\nconst roomList = await bot.Room.find()\nconst roomList = await bot.Room.find({topic: 'wechaty'})\n")),Object(c.b)("h2",{id:"roomqueryfilter"},"RoomQueryFilter"),Object(c.b)("p",null,"The filter to find the room: {topic: string ","|"," RegExp}"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": global typedef ",Object(c.b)("strong",{parentName:"p"},"Properties")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"topic"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string"))))),Object(c.b)("h2",{id:"roomeventname"},"RoomEventName"),Object(c.b)("p",null,"Room Class Event Type"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": global typedef ",Object(c.b)("strong",{parentName:"p"},"Properties")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"join"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Emit when anyone join any room.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"topic"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Get topic event, emitted when someone change room topic.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"leave"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),'Emit when anyone leave the room.                                If someone leaves the room by themselves, wechat will not notice other people in the room, so the bot will never get the "leave" event.')))),Object(c.b)("h2",{id:"roomeventfunction"},"RoomEventFunction"),Object(c.b)("p",null,"Room Class Event Function"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": global typedef ",Object(c.b)("strong",{parentName:"p"},"Properties")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"room-join"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"function")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"(","this: Room, inviteeList: Contact","[","]"," , inviter: Contact",")","  =",">"," void")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"room-topic"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"function")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"(","this: Room, topic: string, oldTopic: string, changer: Contact",")"," =",">"," void")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"room-leave"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"function")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"(","this: Room, leaver: Contact",")"," =",">"," void")))),Object(c.b)("h2",{id:"roommemberqueryfilter"},"RoomMemberQueryFilter"),Object(c.b)("p",null,"The way to search member by Room.member","(",")"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Kind"),": global typedef ",Object(c.b)("strong",{parentName:"p"},"Properties")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Name"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Type"),Object(c.b)("th",Object(o.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"name"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Find the contact by wechat name in a room, equal to ",Object(c.b)("inlineCode",{parentName:"td"},"Contact.name()"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"roomAlias"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Find the contact by alias set by the bot for others in a room.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"contactAlias"),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(o.a)({parentName:"tr"},{align:"left"}),"Find the contact by alias set by the contact out of a room, equal to ",Object(c.b)("inlineCode",{parentName:"td"},"Contact.alias()"),". ",Object(c.b)("a",Object(o.a)({parentName:"td"},{href:"https://github.com/wechaty/wechaty/issues/365"}),"More Detail"))))))}l.isMDXComponent=!0},177:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return O}));var o=a(0),n=a.n(o);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)a=c[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)a=c[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=n.a.createContext({}),l=function(e){var t=n.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},p=function(e){var t=l(e.components);return n.a.createElement(m.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,o=e.mdxType,c=e.originalType,r=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=l(a),d=o,O=p["".concat(r,".").concat(d)]||p[d]||j[d]||c;return a?n.a.createElement(O,b(b({ref:t},m),{},{components:a})):n.a.createElement(O,b({ref:t},m))}));function O(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=a.length,r=new Array(c);r[0]=d;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:o,r[1]=b;for(var m=2;m<c;m++)r[m]=a[m];return n.a.createElement.apply(null,r)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);